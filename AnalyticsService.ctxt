#BlueJ class context
comment0.target=AnalyticsService
comment0.text=\n\ Colony\ analytics\ and\ reporting\ system\n\ Sprint\ 3\ Feature\:\ Data\ Analytics\ and\ Reporting\n
comment1.params=scheduleService\ emergencyService\ resourceInventory\ communicationsService
comment1.target=AnalyticsService(ScheduleService,\ EmergencyService,\ ResourceInventory,\ CommunicationsService)
comment10.params=e1\ e2
comment10.target=int\ compare(AnalyticsService.SystemEvent,\ AnalyticsService.SystemEvent)
comment11.params=date
comment11.target=AnalyticsService.DailyMetrics\ getDailyMetrics(java.time.LocalDate)
comment11.text=\n\ Get\ daily\ metrics\ for\ specific\ date\n
comment12.params=
comment12.target=java.util.List\ getAllSystemEvents()
comment12.text=\n\ Get\ all\ system\ events\ (for\ testing)\n
comment13.params=
comment13.target=void\ clearAnalyticsData()
comment13.text=\n\ Clear\ all\ analytics\ data\ (for\ testing\ cleanup)\n
comment2.params=eventType\ description\ severity
comment2.target=void\ recordEvent(java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Records\ system\ event\ for\ analytics\ tracking\n
comment3.params=date
comment3.target=java.util.Map\ generateDailyReport(java.time.LocalDate)
comment3.text=\n\ Generates\ daily\ colony\ operations\ report\n
comment4.params=date
comment4.target=AnalyticsService.DailyMetrics\ collectDailyMetrics(java.time.LocalDate)
comment4.text=\n\ Collects\ metrics\ for\ specific\ date\n
comment5.params=startDate
comment5.target=java.util.Map\ generateWeeklyReport(java.time.LocalDate)
comment5.text=\n\ Generates\ weekly\ trend\ analysis\n
comment6.params=dailyReports
comment6.target=java.util.Map\ calculateTrends(java.util.List)
comment6.text=\n\ Calculates\ trends\ from\ daily\ reports\n
comment7.params=date
comment7.target=java.util.List\ getEventsForDate(java.time.LocalDate)
comment7.text=\n\ Gets\ system\ events\ for\ specific\ date\n
comment8.params=
comment8.target=int\ calculateColonyHealthScore()
comment8.text=\n\ Colony\ health\ score\ (0-100)\ based\ on\ multiple\ factors\n
comment9.params=count
comment9.target=java.util.List\ getRecentEvents(int)
comment9.text=\n\ Gets\ recent\ system\ events\ sorted\ by\ timestamp\ (newest\ first)\n
numComments=14
